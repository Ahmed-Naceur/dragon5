*DECK PCR
      SUBROUTINE PCR(NENTRY,HENTRY,IENTRY,JENTRY,KENTRY)
*
*-----------------------------------------------------------------------
*
*Purpose:
* Recover and interpolate Microlib or Macrolib information from one or
* many PMAXS files.
*
*Copyright:
* Copyright (C) 2019 Ecole Polytechnique de Montreal
*
*Author(s): 
* A. Hebert
*
*Parameters: input
* NENTRY  number of data structures transfered to this module.
* HENTRY  name of the data structures.
* IENTRY  data structure type where:
*         IENTRY=1 for LCM memory object;
*         IENTRY=2 for XSM file;
*         IENTRY=3 for sequential binary file;
*         IENTRY=4 for sequential ASCII file.
* JENTRY  access permission for the data structure where:
*         JENTRY=0 for a data structure in creation mode;
*         JENTRY=1 for a data structure in modifications mode;
*         JENTRY=2 for a data structure in read-only mode.
* KENTRY  data structure pointer.
*
*Comments:
* The PCR: calling specifications are:
* MLIB := PCR: [ { MLIB | MLIB2 } ] PMAX1 [[ PMAX2 ]] [ MAPFL ] :: (PCR\_data) ;
* where
*   MLIB : name of a \emph{microlib (type L\_LIBRARY) or \emph{macrolib} (type 
*     L\_MACROLIB) containing the interpolated data. If this object also 
*     appears on the RHS of structure (PCR:, it is open in modification mode 
*     and updated.
*   MLIB2 : name of an optional \emph{microlib} object whose content is copied 
*     on MLIB.
*   PMAX1 : name of the PMAXS file.
*   PMAX2 : name of an additional PMAXS file. This file is optional.
*   MAPFL : name of the \emph{map} object containing fuel regions description, 
*     parameter information (burnup, fuel/coolant temperatures, coolant 
*     density, etc). Keyword TABLE is expected in (PCR\_data).
*   PCR\_data : input data structure containing interpolation information.
*
*-----------------------------------------------------------------------
*
      USE GANLIB
      USE PCRDATA
      USE PCREAD
*----
*  SUBROUTINE ARGUMENTS
*----
      INTEGER      NENTRY,IENTRY(NENTRY),JENTRY(NENTRY)
      TYPE(C_PTR)  KENTRY(NENTRY)
      CHARACTER    HENTRY(NENTRY)*12
*----
*  LOCAL VARIABLES
*----
      PARAMETER(NSTATE=40,MXPMAXS=10,MAXISD=200,IOUT=6,MAXR=12)
      INTEGER ISTATE(NSTATE),XS_F_NUM,IFPMAXS(MXPMAXS)
      LOGICAL LMACRO,LCUBIC
      DOUBLE PRECISION DFLOTT
      TYPE(C_PTR) IPMAP,IPLIB,IPLIB2
      CHARACTER HSIGN*12,TEXT4*4,TEXT12*12,HSMG*131,NMDEPL(MAXR)*8
      CHARACTER(LEN=12) :: HFPMAXS(MXPMAXS)
*----
*  ALLOCATABLE ARRAYS
*----
      INTEGER, ALLOCATABLE, DIMENSION(:) :: NISO,ITNAM,ITZEA,MATNO,
     1 KPAX,INAM,IZAE,HREAC,IDR,KPAR
      INTEGER, ALLOCATABLE, DIMENSION(:,:,:) :: HISO
      REAL, ALLOCATABLE, DIMENSION(:) :: BPAX,RER,RRD,BPAR,YIELD
      REAL, ALLOCATABLE, DIMENSION(:,:) :: TERP,CONC
      LOGICAL, ALLOCATABLE, DIMENSION(:) :: LMIXC
      TYPE(XSBLOCK_ITEM), ALLOCATABLE, DIMENSION(:) :: XS_CALC
*
      SAVE      NMDEPL
      DATA      NMDEPL/'DECAY   ','NFTOT   ','NG      ','N2N     ',
     >                 'N3N     ','N4N     ','NA      ','NP      ',
     >                 'N2A     ','NNP     ','ND      ','NT      '/
*----
*  PARAMETER VALIDATION
*----
      IF(NENTRY.LE.1) CALL XABORT('PCR: MINIMUM OF 2 OBJECTS EXPECTED.')
      IF((IENTRY(1).NE.1).AND.(IENTRY(1).NE.2)) CALL XABORT('PCR: MACRO'
     1 //'LIB LCM OBJECT EXPECTED AT LHS.')
      IF((JENTRY(1).NE.0).AND.(JENTRY(1).NE.1)) CALL XABORT('PCR: MACRO'
     1 //'LIB IN CREATE OR MODIFICATION MODE EXPECTED.')
      IACCS=JENTRY(1)
      IPLIB=KENTRY(1)
      IPLIB2=C_NULL_PTR
      IPMAP=C_NULL_PTR
      IFPMAXS(:)=0 ! PMAXS file unit
      NGRP=0
      NMIX=0
      XS_F_NUM=0
      IF(IACCS.EQ.1) THEN
        CALL LCMGTC(IPLIB,'SIGNATURE',12,1,HSIGN)
        IF(HSIGN.EQ.'L_LIBRARY') THEN
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          NGRP=ISTATE(3)
          NMIX=ISTATE(1)
        ELSE IF(HSIGN.NE.'L_MACROLIB') THEN
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          NGRP=ISTATE(1)
          NMIX=ISTATE(2)
        ELSE
          TEXT12=HENTRY(1)
          CALL XABORT('PCR: SIGNATURE OF '//TEXT12//' IS '//HSIGN//
     1    '. L_LIBRARY OR L_MACROLIB EXPECTED.')
        ENDIF
      ENDIF
      DO 10 I=2,NENTRY
        IF(IENTRY(I).EQ.3) CALL XABORT('PCR: LCM OBJECTS OR ASCII FILE'
     1 //'S EXPECTED AT RHS.')
        IF(JENTRY(I).NE.2) CALL XABORT('PCR: LCM OBJECTS IN READ-ONLY '
     1 //'MODE EXPECTED AT RHS.')
        IF(IENTRY(I).EQ.4) THEN
          XS_F_NUM=XS_F_NUM+1
          IF(XS_F_NUM.GT.MXPMAXS) CALL XABORT('PCR: MXPMAXS OVERFLOW.')
          IFPMAXS(XS_F_NUM)=FILUNIT(KENTRY(I))
          HFPMAXS(XS_F_NUM)=HENTRY(I)
        ELSE
          CALL LCMGTC(KENTRY(I),'SIGNATURE',12,1,HSIGN)
          IF(HSIGN.EQ.'L_LIBRARY') THEN
            IF(C_ASSOCIATED(IPLIB2)) CALL XABORT('PCR: ONLY ONE MICROL'
     1     //'IB EXPECTED AT RHS.')
            IPLIB2=KENTRY(I)
            GO TO 10
          ELSE IF(HSIGN.EQ.'L_MACROLIB') THEN
            CALL XABORT('PCR: ANOTHER MACROLIB NOT EXPECTED AT RHS.')
          ELSE IF(HSIGN.EQ.'L_MAP') THEN
            IF(I.NE.NENTRY)CALL XABORT('PCR: FUEL-MAP EXPECTED TO BE T'
     1      //'HE LAST OBJECT.')
            IF(NENTRY.LT.3)CALL XABORT('PCR: MISSING SAPHYB OBJECT.')
            IPMAP=KENTRY(NENTRY)
            CALL LCMGET(IPMAP,'STATE-VECTOR',ISTATE)
            NMIX=ISTATE(9)
          ELSE
            CALL XABORT('PCR: INVALID SIGNATURE='//HSIGN//'.')
          ENDIF
        ENDIF
   10 CONTINUE
*----
*  ALLOCATE PMAXS INFORMATION
*----
      IF(XS_F_NUM.EQ.0) CALL XABORT('PCR: PMAXS FILE NOT DEFINED.')
      ALLOCATE(Bran_info(XS_F_NUM))
      ALLOCATE(PMAXS(XS_F_NUM))
      KREAD=-1
      DO I=1,XS_F_NUM
        PMAX=>PMAXS(I)
        Bran_info(I)%NOT_assigned=.true.
        CALL read_PMAXS_file(I,KREAD,IFPMAXS(I))
        KREAD=0
      ENDDO
      NCAL=0
      DO IBRA=1,NBRA
        IBSET=PMAX%BRANCH(IBRA,1)%IBSET
        NBURN=PMAX%Bset(IBSET)%NBURN
        NCAL=NCAL+NBURN
      ENDDO
*----
*  READ THE INPUT DATA
*----
      LMACRO=.TRUE.
      LCUBIC=.FALSE.
      B2=0.0
      IMPX=1
   20 CALL REDGET(INDIC,NITMA,FLOTT,TEXT12,DFLOTT)
      IF(INDIC.NE.3) CALL XABORT('PCR: CHARACTER DATA EXPECTED(1).')
   30 IF(TEXT12.EQ.'EDIT') THEN
*       READ THE PRINT INDEX.
        CALL REDGET(INDIC,IMPX,FLOTT,TEXT12,DFLOTT)
        IF(INDIC.NE.1) CALL XABORT('PCR: INTEGER DATA EXPECTED(1).')
      ELSE IF(TEXT12.EQ.'NMIX') THEN
*       READ THE MAXIMUM NUMBER OF MATERIAL MIXTURES.
        CALL REDGET(INDIC,NITMA,FLOTT,TEXT12,DFLOTT)
        IF(INDIC.NE.1) CALL XABORT('PCR: INTEGER DATA EXPECTED(2).')
        IF(NITMA.LT.NMIX) THEN
           WRITE(HSMG,'(20HPCR: NMIX MUST BE >=,I8)') NMIX
           CALL XABORT(HSMG)
        ENDIF
        NMIX=NITMA
      ELSE IF(TEXT12.EQ.'MACRO') THEN
        LMACRO=.TRUE.
      ELSE IF(TEXT12.EQ.'MICRO') THEN
        LMACRO=.FALSE.
      ELSE IF(TEXT12.EQ.'LINEAR') THEN
        LCUBIC=.FALSE.
      ELSE IF(TEXT12.EQ.'CUBIC') THEN
        LCUBIC=.TRUE.
      ELSE IF(TEXT12.EQ.'PMAXS') THEN
        IF(NMIX.EQ.0) CALL XABORT('PCR: ZERO NUMBER OF MIXTURES.')
        IF(C_ASSOCIATED(IPMAP)) THEN
          WRITE(IOUT,'(/43H PCR: ***WARNING*** A FUEL MAP IS SET AT RH,
     1    26HS; KEYWORD TABLE EXPECTED.)')
        ENDIF
        NGRP=NGROUP
        IF((IACCS.EQ.0).AND.(C_ASSOCIATED(IPLIB2))) THEN
          CALL LCMEQU(IPLIB2,IPLIB)
          IACCS=1
        ENDIF
        CALL REDGET(INDIC,NITMA,FLOTT,TEXT12,DFLOTT)
        IF(INDIC.NE.3) CALL XABORT('PCR: CHARACTER DATA EXPECTED(2).')
        I0=0
        DO 60 I=1,XS_F_NUM
          IF(TEXT12.EQ.HFPMAXS(I)) THEN
            PMAX=>PMAXS(I)
            ITH=I
            GO TO 70
          ENDIF
   60   CONTINUE
        CALL XABORT('PCR: PMAXS FILE '//TEXT12//' NOT FOUND.')
   70   IF(IMPX.GT.0) WRITE(IOUT,310) TEXT12
        ALLOCATE(TERP(NCAL,NMIX),NISO(NMIX),HISO(2,NMIX,MAXISD),
     1  CONC(NMIX,MAXISD),LMIXC(NMIX),XS_CALC(NCAL))
*
        CALL PCRDRV(LCUBIC,NMIX,IMPX,NCAL,ITER,MAXNIS,TERP,NISO,HISO,
     1  CONC,LMIXC,XS_CALC)
        GO TO 100
      ELSE IF(TEXT12.EQ.'TABLE') THEN
        IF(.NOT.C_ASSOCIATED(IPMAP)) CALL XABORT('PCR: MISSING FUEL-MA'
     1  //'P OBJECT.')
        ISTATE(:NSTATE)=0
        CALL LCMGET(IPMAP,'STATE-VECTOR',ISTATE)
        NB=ISTATE(1)
        NCH=ISTATE(2)
        NCOMB=ISTATE(3)
        NGRP=ISTATE(4)
        NFUEL=ISTATE(7)
        NPARM=ISTATE(8)
        IF(NCOMB.EQ.0)CALL XABORT('PCR: NUMBER OF COMBUSTION ZONES NO'
     1   //'T YET DEFINED IN THE FUEL MAP NCOMB=0.')
        IF((IACCS.EQ.0).AND.(C_ASSOCIATED(IPLIB2))) THEN
          CALL LCMEQU(IPLIB2,IPLIB)
          IACCS=1
        ENDIF
        CALL REDGET(INDIC,NITMA,FLOTT,TEXT12,DFLOTT)
        IF(INDIC.NE.3) CALL XABORT('PCR: CHARACTER DATA EXPECTED(3).')
        I0=0
        DO 80 I=1,XS_F_NUM
          IF(TEXT12.EQ.HFPMAXS(I)) THEN
            PMAX=>PMAXS(I)
            ITH=I
            GO TO 90
          ENDIF
   80   CONTINUE
        CALL XABORT('PCR: PMAXS FILE '//TEXT12//' NOT FOUND.')
   90   IF(IMPX.GT.0) WRITE(IOUT,310) TEXT12
        IF(NGRP.NE.NGROUP) THEN
          WRITE(HSMG,'(9H PCR: THE,I4,29H-TH PMAXS FILE HAS AN INVALID,
     1    25H NUMBER OF ENERGY GROUPS.)') ITH
          CALL XABORT(HSMG)
        ENDIF
        ALLOCATE(TERP(NCAL,NMIX),NISO(NMIX),HISO(2,NMIX,MAXISD),
     1  CONC(NMIX,MAXISD),LMIXC(NMIX),XS_CALC(NCAL))
*
        CALL PCRRGR(IPMAP,LCUBIC,NMIX,IMPX,NCAL,NCH,NB,NFUEL,NPARM,
     1  ITER,MAXNIS,TERP,NISO,HISO,CONC,LMIXC,XS_CALC)
        GO TO 100
      ELSE IF(TEXT12.EQ.'LEAK') THEN
        CALL REDGET(INDIC,NITMA,B2,TEXT12,DFLOTT)
        IF(INDIC.NE.2) CALL XABORT('PCR: REAL DATA EXPECTED.')
      ELSE IF(TEXT12.EQ.'CHAIN') THEN
        IF(LMACRO) CALL XABORT('PCR: MICRO KEYWORD EXPECTED.')
        CALL REDGET(INDIC,MD2,FLOTT,TEXT12,DFLOTT)
        IF(INDIC.NE.1) CALL XABORT('PCR: INTEGER DATA EXPECTED.')
*
        ALLOCATE(ITNAM(3*MD2),ITZEA(MD2),MATNO(MD2),
     1  KPAX((MD2+MAXR)*MD2),BPAX((MD2+MAXR)*MD2))
        TEXT4='    '
        READ(TEXT4,'(A4)') ITEXT4
        ITNAM(:3*MD2)=ITEXT4
        ITZEA(:MD2)=0
        MATNO(:MD2)=0
        KPAX(:(MD2+MAXR)*MD2)=0
        BPAX(:(MD2+MAXR)*MD2)=0.0
        CALL PCREIR(NMDEPL,MD2,NEL,ITNAM,ITZEA,KPAX,BPAX)
        CALL LIBWET(MAXR,MD2,NSTATE,NMDEPL,ITNAM,ISTATE,MATNO,KPAX,BPAX)
        NDEPL=ISTATE(1)
        NDFI=ISTATE(2)
        NDFP=ISTATE(3)
        NHEAVY=ISTATE(4)
        NLIGHT=ISTATE(5)
        NOTHER=ISTATE(6)
        NSTABL=ISTATE(7)
        NREAC=ISTATE(8)
        NPAR=ISTATE(9)
*----
*  ALLOCATE DECAY CHAIN
*----
        NDEPL=MAX(NDEPL,1)
        NDFI=MAX(NDFI,1)
        NDFP=MAX(NDFP,1)
        ALLOCATE(INAM(3*NDEPL),IZAE(NDEPL),IDR(NREAC*NDEPL),
     1  RER(NREAC*NDEPL),RRD(NDEPL),KPAR(NPAR*NDEPL),BPAR(NPAR*NDEPL),
     2  YIELD(NDFI*NDFP))
*----
*  SET DECAY CHAIN
*----
        CALL LIBWED(MAXR,MD2,NDEPL,NDFI,NDFP,NHEAVY,NLIGHT,NOTHER,NREAC,
     >              NPAR,ITNAM,ITZEA,MATNO,KPAX,BPAX,INAM,IZAE,IDR,RER,
     >              RRD,KPAR,BPAR,YIELD)
*----
*  RELEASE WORK VECTORS FOR WIMS-AECL, WIMS-NEA, DRAGLIB
*  AND INPUT FILE
*----
        DEALLOCATE(BPAX,KPAX,MATNO,ITZEA,ITNAM)
*----
*  SELECT USED DEPLETION REACTION NAMES
*----
        ALLOCATE(HREAC(2*NREAC))
        DO 95 I=1,NREAC
          READ(NMDEPL(I),'(2A4)') (HREAC(2*(I-1)+J),J=1,2)
   95   CONTINUE
*----
*  PRINT DECAY CHAIN IF REQUIRED
*----
        IMPY=IMPX+2
        CALL LIBEPR(IMPY,NDEPL,NSTABL,NDFI,NDFP,NREAC,NPAR,INAM,
     >              HREAC,IDR,RER,RRD,KPAR,BPAR,YIELD,IZAE)
*----
*  SAVE CHAIN
*----
        CALL LCMSIX(IPLIB,'DEPL-CHAIN',1)
        CALL LCMPUT(IPLIB,'STATE-VECTOR',NSTATE,1,ISTATE)
        NDEPL=ISTATE(1)
        CALL LCMPUT(IPLIB,'ISOTOPESDEPL',3*NDEPL,3,INAM)
        CALL LCMPUT(IPLIB,'CHARGEWEIGHT',NDEPL,1,IZAE)
        CALL LCMPUT(IPLIB,'DEPLETE-IDEN',2*NREAC,3,HREAC)
        CALL LCMPUT(IPLIB,'DEPLETE-REAC',NREAC*NDEPL,1,IDR)
        CALL LCMPUT(IPLIB,'DEPLETE-ENER',NREAC*NDEPL,2,RER)
        CALL LCMPUT(IPLIB,'DEPLETE-DECA',NDEPL,2,RRD)
        CALL LCMPUT(IPLIB,'PRODUCE-REAC',NPAR*NDEPL,1,KPAR)
        CALL LCMPUT(IPLIB,'PRODUCE-RATE',NPAR*NDEPL,2,BPAR)
        IF(NDFP.GT.0) CALL LCMPUT(IPLIB,'FISSIONYIELD',NDFI*NDFP,2,
     >  YIELD)
        CALL LCMSIX(IPLIB,' ',2)
        CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
        ISTATE(11)=NDEPL
        ISTATE(12)=NMIX
        CALL LCMPUT(IPLIB,'STATE-VECTOR',NSTATE,1,ISTATE)
*----
*  DEALLOCATE DECAY CHAIN ARRAYS
*----
        DEALLOCATE(YIELD,BPAR,KPAR,RRD,RER,IDR,IZAE,INAM)
        IF(IMPX.GT.0) THEN
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          WRITE(IOUT,300) IMPX,(ISTATE(I),I=1,15),(ISTATE(I),I=17,24)
        ENDIF
      ELSE IF(TEXT12.EQ.';') THEN
        GO TO 200
      ELSE
        CALL XABORT('PCR: '//TEXT12//' IS AN INVALID KEYWORD.')
      ENDIF
      GO TO 20
*----
*  BUILD THE INTERPOLATED MACROLIB OR MICROLIB
*----
 100  IF(LMACRO) THEN
*       build a macrolib
        CALL PCRMAC(MAXNIS,IPLIB,IACCS,NMIX,NGRP,NGFF,IMPX,NCAL,TERP,
     1  NISO,HISO,CONC,LMIXC,XS_CALC,B2)
        IF(IMPX.GT.0) THEN
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          WRITE(IOUT,290) IMPX,(ISTATE(I),I=1,9),ISTATE(12),ISTATE(16)
        ENDIF
      ELSE
*       build a microlib
        IF(IACCS.EQ.0)THEN
          MAXISO=MAXISD*NMIX
        ELSE
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          MAXISO=MAX(MAXISD*NMIX,ISTATE(2))
        ENDIF
        CALL PCRMIC(MAXNIS,MAXISO,IPLIB,IACCS,NMIX,NGRP,IMPX,NCAL,TERP,
     1  NISO,HISO,CONC,LMIXC,XS_CALC,B2)
        IF(IMPX.GT.0) THEN
          CALL LCMGET(IPLIB,'STATE-VECTOR',ISTATE)
          WRITE(IOUT,300) IMPX,(ISTATE(I),I=1,15),(ISTATE(I),I=17,24)
        ENDIF
      ENDIF
*
      DEALLOCATE(XS_CALC,LMIXC,CONC,HISO,NISO,TERP)
*----
*  CONTINUE DATA PROCESSING
*----
      IF(ITER.EQ.0) THEN
        GO TO 200
      ELSE IF(ITER.EQ.1) THEN
        TEXT12='PMAXS'
        GO TO 30
      ELSE IF(ITER.EQ.2) THEN
        TEXT12='TABLE'
        GO TO 30
      ELSE IF(ITER.EQ.3) THEN
        TEXT12='CHAIN'
        GO TO 30
      ENDIF
*----
*  DEALLOCATE PMAXS INFORMATION
*----
  200 IF(IMPX.GT.2) CALL LCMLIB(IPLIB)
      DO I=1,XS_F_NUM
        PMAX=>PMAXS(I)
        CALL Clear_PMAXS_file(I)
      ENDDO
      DEALLOCATE(PMAXS,Bran_info)
      RETURN
*
  290 FORMAT(/8H OPTIONS/8H -------/
     1 7H IMPX  ,I6,30H   (0=NO PRINT/1=SHORT/2=MORE)/
     2 7H NGROUP,I6,28H   (NUMBER OF ENERGY GROUPS)/
     3 7H NBMIX ,I6,39H   (NUMBER OF MIXTURES IN THE MACROLIB)/
     4 7H NANISO,I6,34H   (MAXIMUM SCATTERING ANISOTROPY)/
     5 7H NIFISS,I6,45H   (MAXIMUM NUMBER OF FISSILE ISOTOPES IN A M,
     6 7HIXTURE)/
     7 7H NEDMAC,I6,34H   (NUMBER OF CROSS SECTION EDITS)/
     8 7H ITRANC,I6,45H   (0=NO TRANSPORT CORRECTION/1=APOLLO TYPE/2,
     9 43H=RECOVER FROM LIBRARY/4=LEAKAGE CORRECTION)/
     1 7H NLG   ,I6,39H   (NUMBER OF DELAYED PRECURSOR GROUPS)/
     2 7H ILEAK ,I6,40H   (1=DIFF AVAILABLE; 2=DIFFX AVAILABLE)/
     3 7H IDF   ,I6,45H   (0=NO ADF INFO/1=ALBS INFO/2=ADF GAP INFO))
  300 FORMAT(/8H OPTIONS/8H -------/
     1 7H IMPX  ,I6,30H   (0=NO PRINT/1=SHORT/2=MORE)/
     2 7H MAXMIX,I6,31H   (MAXIMUM NUMBER OF MIXTURES)/
     3 7H NBISO ,I6,36H   (NUMBER OF ISOTOPES OR MATERIALS)/
     4 7H NGRP  ,I6,28H   (NUMBER OF ENERGY GROUPS)/
     5 7H NL    ,I6,30H   (NUMBER OF LEGENDRE ORDERS)/
     6 7H ITRANC,I6,45H   (0=NO TRANSPORT CORRECTION/1=APOLLO TYPE/2,
     7 57H=RECOVER FROM LIBRARY/3=WIMS-D TYPE/4=LEAKAGE CORRECTION)/
     8 7H IPROB ,I6,23H   (0=DIRECT/1=ADJOINT)/
     9 7H ITIME ,I6,28H   (1=STEADY-STATE/2=PROMPT)/
     1 7H NLIB  ,I6,32H   (NUMBER OF SETS OF LIBRARIES)/
     2 7H NGF   ,I6,48H   (NUMBER OF FAST GROUP WITHOUT SELF-SHIELDING)/
     3 7H IGRMAX,I6,41H   (LAST GROUP INDEX WITH SELF-SHIELDING)/
     4 7H NDEPL ,I6,33H   (NUMBER OF DEPLETING ISOTOPES)/
     5 7H NCOMB ,I6,33H   (NUMBER OF DEPLETING MIXTURES)/
     6 7H NEDMAC,I6,34H   (NUMBER OF CROSS SECTION EDITS)/
     7 7H NBMIX ,I6,23H   (NUMBER OF MIXTURES)/
     8 7H NRES  ,I6,40H   (NUMBER OF SETS OF RESONANT MIXTURES)/
     9 7H IPROC ,I6,48H   (-1=SKIP LIBRARY PROCESSING/0=DILUTION INTERP,
     1 48HOLATION/1=USE PHYSICAL TABLES/2=BUILD A DRAGLIB/,
     2 55H3=COMPUTE CALENDF TABLES/4=COMPUTE SLOWING-DOWN TABLES)/
     3 7H IMAC  ,I6,45H   (0=DO NOT/1=DO BUILD AN EMBEDDED MACROLIB)/
     4 7H NDEL  ,I6,31H   (NUMBER OF PRECURSOR GROUPS)/
     5 7H NFISS ,I6,31H   (NUMBER OF FISSILE ISOTOPES)/
     6 7H ISOADD,I6,37H   (0=COMPLETE BURNUP CHAIN/1=DO NOT)/
     7 7H MAXISM,I6,40H   (MAX. NUMBER OF ISOTOPES PER MIXTURE)/
     8 7H IPRECI,I6,34H   (CALENDF ACCURACY FLAG:1/2/3/4)/
     9 7H IDF   ,I6,45H   (0=NO ADF INFO/1=ALBS INFO/2=ADF GAP INFO))
  310 FORMAT(/32H PCR: INTERPOLATING PMAXS FILE ',A12,2H'.)
      END
