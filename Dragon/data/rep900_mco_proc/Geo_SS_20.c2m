*DECK Geo_SS
*----
*  Name          : Geo_SS.c2m
*  Type          : DRAGON procedure
*  Use           : Geometry generation for Self-Shielding Calculation
*                  with 20 fuel regions
*  Author        : R. Vallerent
*
*  Procedure called as: 
*
*GEOSS := Geo_SS :: <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
*                   <<R_int_TG>> <<R_ext_TG>> <<R_int_TI>> 
*                   <<R_ext_TI>> <<R_int_G>> <<R_ext_G>> <<Cote>>
*                   <<CoteL>> ;
*
*  Input data   :
*    Rcomb1     :  50/100 of outer radius of fuel (cm)
*    Rcomb2     :  80/100 of outer radius of fuel (cm)
*    Rcomb3     :  95/100 of outer radius of fuel (cm)
*    Rcomb4     : 100/100 of outer radius of fuel (cm)
*    R_int_TG   : Inner radius of cladding of guide tube (cm)
*    R_ext_TG   : Outer radius of cladding of guide tube (cm)
*    R_int_TI   : Inner radius of cladding of guide tube (cm)
*    R_ext_TI   : Outer radius of cladding of guide tube (cm)
*    R_int_G    : Inner radius of cladding of fuel tube (cm)
*    R_ext_G    : Outer radius of cladding of fuel tube (cm)
*    Cote       : Lattice pitch (cm)
*    CoteL      : Lattice pitch + Water space (cm)
*
*  Output data  :
*    GEOSS      : Geometry for Self-Shielding Calculation


PARAMETER  GEOSS  ::  
       EDIT 0 
           ::: LINKED_LIST GEOSS  ; 
   ;
*----
*  Modules used in this procedure
*----
MODULE  GEO: END: ;

*----
*  Input data recovery
*----
*                                                              ;
REAL Rcomb1       Rcomb2       Rcomb3       Rcomb4     ;
:: >>Rcomb1<<   >>Rcomb2<<   >>Rcomb3<<   >>Rcomb4<<   ;
REAL R_int_TG     R_ext_TG     R_int_TI     R_ext_TI   ;
:: >>R_int_TG<< >>R_ext_TG<< >>R_int_TI<< >>R_ext_TI<< ;
REAL R_int_G      R_ext_G      Cote         CoteL      ;
:: >>R_int_G<<  >>R_ext_G<<  >>Cote<<     >>CoteL<<    ;



GEOSS := GEO: :: CAR2D 9 9
  EDIT 0
  X- DIAG X+ REFL
  Y- SYME Y+ DIAG
  CELL TI C1 C1 T1 C1 C1 T2 C1 C4
          C2 C2 C1 C2 C2 C1 C2 C4
             C2 C1 C2 C2 C1 C2 C4
                T1 C1 C1 T2 C1 C4
                   C2 C1 C1 C2 C4
                      T2 C1 C3 C4
                         C2 C3 C4
                            C3 C4
                               C5

  MERGE 8  1  1  7  1  1  6  1  4
           2  2  1  2  2  1  2  4
              2  1  2  2  1  2  4
                 7  1  1  6  1  4
                    2  1  1  2  4
                       6  1  3  4
                          2  3  4
                             3  4
                                5

* T2 -> 6 , T1 ->  7 , TI -> 8

  TURN  A  A  E  A  A  E  A  A  A
           A  E  F  A  E  D  A  A
              C  B  G  C  H  G  A
                 A  G  C  A  G  A
                    A  B  D  A  A
                       A  A  A  A
                          A  G  A
                             A  A
                                A


  ::: C1 := GEO: CARCEL 6
         MESHX 0.0 <<Cote>>
         MESHY 0.0 <<Cote>>
         RADIUS 0.0 <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                <<R_int_G>> <<R_ext_G>>
         MIX  9 10 11 12 3 2 4
  ;
  ::: C2 := GEO: C1
         MIX 13 14 15 16 3 2 4
  ;
  ::: C3 := GEO: C1
         MIX 17 18 19 20 3 2 4
  ;
  ::: C4 := GEO: CARCEL 6
         MESHX 0.0 <<CoteL>>
         MESHY 0.0 <<Cote>>
         RADIUS 0.0 <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                <<R_int_G>> <<R_ext_G>>
         MIX 21 22 23 24 3 2 4
  ;
  ::: C5 := GEO: CARCEL 6
         MESHX 0.0 <<CoteL>>
         MESHY 0.0 <<CoteL>>
         RADIUS 0.0 <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                <<R_int_G>> <<R_ext_G>>
         MIX 25 26 27 28 3 2 4
  ;
  ::: T2 := GEO: CARCEL 2
         MESHX 0.0 <<Cote>>
         MESHY 0.0 <<Cote>>
         RADIUS 0.0 <<R_int_TG>> <<R_ext_TG>>
         MIX 6 1 6
  ;
  ::: T1 := GEO: T2
         MIX 7 1 7
  ;
  ::: TI := GEO: CARCEL 2
         MESHX 0.0 <<Cote>>
         MESHY 0.0 <<Cote>>
         RADIUS 0.0 <<R_int_TI>> <<R_ext_TI>>
         MIX 8 1 8
  ;
;

END: ;
QUIT .
