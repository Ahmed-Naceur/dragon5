*DECK GeoACRC2D.c2m
*----
*  Name          : GeoACRC2D.c2m
*  Type          : DRAGON procedure
*  Use           : Generate and track using EXCELT 
*                  the ACR 2D cell models
*  Author        : G. Marleau
*  Date          : 2005/02/10 (Revision 0 by G. M.)
*                  2005/07/19 (Revision 1 by G. M.)
*  Reference     : Report IGE-276
*  
*  Procedure called as: 
*
*  Tracking Intline := GeoACRC2D :: 
*  <<Model>> <<Option>> <<State>> <<BCtrk>> <<DiscrOpt>>
*  <<Fuel>> <<Cool>> <<PT>> <<CT>> <<Mode>> 
*  <<NbAngles>> <<TrkDens>>
*  ;
*
*  Parameters of the procedure
*  Tracking      : Tracking data structures
*  Intline       : Integration lines
*  Input data:
*  Model         : Fuel 2D cell models (see report IGE-276)
*                  C2D1     -> 2D Cartesian cluster
*                  C2D2     -> 2D annular cluster
*                  C2D3     -> 2D Cartesian cell
*                  C2D4     -> 2D Cartesian cluster with independent pins
*                  C2D5     -> 2D Cartesian cluster for distributed self-shielding
*                  C2D6     -> 2D Cartesian cluster (WIMS discretization)
*  Option        : Geometry option: 
*                  "Flux"    -> Fine geometry for flux calculation
*                  "Shield"  -> Coarse geometry for self-shielding
*                               calculation
*  State         : State of coolant
*                  "Present"   -> Coolant present at reference density
*                                 (coolant is mixture 1)
*                  "Part-void" -> Coolant has reduced density
*                                 (coolant is mixture 11)
*                  "Absent"    -> Coolant absent 
*                                 (coolant is mixture 0)
*  BCtrk         : Type of external boundary conditions
*                  used only for C2D1, C2D3 and C2D4 (TSPC or TISO)
*  For Option = "Flux" the following mesh discretisation options
*                must be provided
*  DiscrOpt   = Type of discretisation provided
*               "Split" for integer split options
*               "Thickness" for real region thickness
*  For DiscrOpt = "Thickness"
*  Fuel          : real fuel radial Delta R 
*                  negative value recommended as per SPLITR
*  Cool          : real coolant rings Delta R  
*                  positive value recommended.
*  PT            : real pressure tube Delta R 
*                  positive value recommended.
*  CT            : real calandria tube Delta R 
*                  positive value recommended.
*  Mode          : real moderator Delta R
*                  positive value recommended.
*  For DiscrOpt = "Split"
*  Fuel          : integer SPLITR for fuel 
*                  negative value recommended as per SPLITR
*  Cool          : integer SPLITR for coolant  
*                  positive value recommended.
*  PT            : integer SPLITR for pressure tube 
*                  positive value recommended.
*  CT            : integer SPLITR for calandria tube
*                  positive value recommended.
*  Mode          : integer SPLITR for moderator 
*                  positive value recommended.
*  NbAngles      : Number of angles for tracking.
*  TrkDens       : Tracking density.
*----
* Definition of the input and output data structures and 
* of the input and output parameters for this procedure
*
PARAMETER          Tracking  Intline                    ::
    ::: LINKED_LIST Tracking     ; 
    ::: SEQ_BINARY  Intline      ;                      ;
STRING    Model Option State BCtrk DiscrOpt             ;              
:: >>Model<< >>Option<< >>State<< >>BCtrk<<             ;
REAL      FuelDR    CoolDR    PTDR    CTDR    ModeDR :=
          0.0       0.0       0.0     0.0     0.0       ;
INTEGER   FuelS     CoolS     PTS     CTS     ModeS  :=
          0         0         0       0       0      ;
INTEGER   LocalIprt Isplit   := 0  0 ;
*----
*  Validate procedure parameters
*  Model and BCtrk
*----
IF Model "C2D1" =  Model "C2D3" =  Model "C2D4" = + + THEN
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: Model is :" Model ;
  ENDIF ;
  IF BCtrk "TISO" =  BCtrk "TSPC" =  + THEN
    ECHO "GeoACRC2D: BCtrk is :" BCtrk ;
  ELSE
    ECHO "WARNING: BCtrk in GeoACRC2D is invalid : " BCtrk ;
  ENDIF ;
ELSEIF Model "C2D2" =  THEN
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: Model is :" Model ;
  ENDIF ;
  IF BCtrk "TISO" =  THEN
    IF LocalIprt 1 = THEN
      ECHO "GeoACRC2D: BCtrk is :" BCtrk ;
    ENDIF ;
  ELSE
    ECHO "WARNING: BCtrk in GeoACRC2D is invalid : " BCtrk ;
  ENDIF ;
ELSE
  ECHO "WARNING: Model in GeoACRC2D is invalid : " Model ;
ENDIF ;
*----
*  Option and DiscrOpt
*----
IF Option "Flux" = THEN
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: Option is :" Option ;
  ENDIF ;
  :: >>DiscrOpt<< ;
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: DiscrOpt is :" DiscrOpt ;
  ENDIF ;
  IF DiscrOpt "Thickness" = THEN
    :: >>FuelDR<< >>CoolDR<< >>PTDR<< >>CTDR<< >>ModeDR<< ;
    EVALUATE Isplit := 1 ;
  ELSEIF DiscrOpt "Split" = THEN
    :: >>FuelS<<  >>CoolS<<  >>PTS<< >>CTS<<   >>ModeS<< ;
    EVALUATE Isplit := -1 ;
  ELSE
    ECHO "WARNING: DiscrOpt in GeoACRC2D is invalid : " DiscrOpt ;
  ENDIF ;
ELSEIF Option "Shield" = THEN
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: Option is :" Option ;
  ENDIF ;
ELSE
  ECHO "WARNING: Option in GeoACRC2D is invalid : " Option ;
ENDIF ;
*----
*  Get tracking parameters
*----
INTEGER   NbAngles             ;
REAL      TrkDens              ;
:: >>NbAngles<< >>TrkDens<<    ;
*----
*  State
*----
IF State "Present" =  State "Part-void" =  
   State "Absent"  = + + THEN
  IF LocalIprt 1 = THEN
    ECHO "GeoACRC2D: State is :" State ;
  ENDIF ;
ELSE
  ECHO "WARNING: State in GeoACRC2D is invalid : " State ;
ENDIF ;
*----
*  Local modules used in this procedure
*----     
MODULE       GEO: NXT: DELETE:                       ;
*----
*  Local procedures used in this procedure
*----     
PROCEDURE    DimACRFuel DimACRCell                      ;
*----
*  Local data structures used in this procedure
*----     
LINKED_LIST  LocalGeo                                   ;
*----
*  Some parameters used in this procedure
*----     
STRING       Title                                      ;
STRING       LocTrk      := "TISO"                      ;
REAL         eps1   eps2 := 0.05  0.05  ;
*----
*  ACR fuel dimensions
*----
INTEGER      Ring   ;
INTEGER      npinp1   npinp2   npinp3   npinp4  ;
REAL         rradf1   rrads1   rpinp1   apinp1  ;    
REAL         rradf2   rrads2   rpinp2   apinp2  ;
REAL         rradf3   rrads3   rpinp3   apinp3  ;
REAL         rradf4   rrads4   rpinp4   apinp4  ;
*----
*  Central (first) fuel ring
*----
EVALUATE    Ring := 1 ;
DimACRFuel  :: <<Ring>>
  >>npinp1<< >>rpinp1<< >>apinp1<< >>rradf1<< >>rrads1<< ;
*----
*  Second fuel ring
*----
EVALUATE    Ring := 2 ;
DimACRFuel  :: <<Ring>>
  >>npinp2<< >>rpinp2<< >>apinp2<< >>rradf2<< >>rrads2<< ;
*----
*  Third fuel ring
*----
EVALUATE    Ring := 3 ;
DimACRFuel  :: <<Ring>>
  >>npinp3<< >>rpinp3<< >>apinp3<< >>rradf3<< >>rrads3<< ;
*----
*  Last (fourth) fuel ring
*----
EVALUATE    Ring := 4 ;
DimACRFuel  :: <<Ring>> 
  >>npinp4<< >>rpinp4<< >>apinp4<< >>rradf4<< >>rrads4<< ;
*----
*  Overall cell dimensions
*----
REAL         rcool4 rpt rgap rct LPitch BLength ;
DimACRCell  ::  
  >>rcool4<< >>rpt<< >>rgap<< >>rct<< >>LPitch<< >>BLength<< ;
*----
*  Derived dimensions
*----
REAL         frstann     := rrads1   eps1 + ;
REAL         rcool1   rcool2   rcool3          :=
             frstann          rpinp2 rrads2 - + 2.0 /
             rpinp2 rrads2  + rpinp3 rrads3 - + 2.0 /
             rpinp3 rrads3  + rpinp4 rrads4 - + 2.0 / ;
REAL         inttann     := rcool1  eps1 + ;
REAL         xymin xymax := LPitch 2.0 / -1.0 * LPitch 2.0 / ;
REAL         equivrad    := LPitch 2. ** $Pi_R / SQRT ;
REAL         lastann     := LPitch 2.0 / eps2 - ;
REAL         Modratio    := lastann rct - equivrad lastann - / ;
REAL         xyimax := lastann 2.0 SQRT / eps2 + ;
REAL         xyimin := xyimax -1.0 *             ;
*----
*  For individual pins angular separation is apind(i)
*----
REAL         apind1 apind2 apind3 apind4 := 
             0.0    
             $Pi_R 2.0 *  7.0 / 
             $Pi_R 2.0 * 14.0 /     
             $Pi_R 2.0 * 21.0 / ; 
REAL         apin1a := apinp1 ;
REAL         apin2a apin2b apin2c apin2d apin2e apin2f apin2g := 
             apinp2 apind2  0.0 * +
             apinp2 apind2  1.0 * +
             apinp2 apind2  2.0 * +
             apinp2 apind2  3.0 * +
             apinp2 apind2  4.0 * +
             apinp2 apind2  5.0 * +
             apinp2 apind2  6.0 * + ;
REAL         apin3a apin3b apin3c apin3d apin3e apin3f apin3g        
             apin3h apin3i apin3j apin3k apin3l apin3m apin3n := 
             apinp3 apind3  0.0 * +
             apinp3 apind3  1.0 * +
             apinp3 apind3  2.0 * +
             apinp3 apind3  3.0 * +
             apinp3 apind3  4.0 * +
             apinp3 apind3  5.0 * +
             apinp3 apind3  6.0 * + 
             apinp3 apind3  7.0 * +
             apinp3 apind3  8.0 * +
             apinp3 apind3  9.0 * +
             apinp3 apind3 10.0 * +
             apinp3 apind3 11.0 * +
             apinp3 apind3 12.0 * +
             apinp3 apind3 13.0 * + ;
REAL         apin4a apin4b apin4c apin4d apin4e apin4f apin4g        
             apin4h apin4i apin4j apin4k apin4l apin4m apin4n  
             apin4o apin4p apin4q apin4r apin4s apin4t apin4u := 
             apinp4 apind4  0.0 * +
             apinp4 apind4  1.0 * +
             apinp4 apind4  2.0 * +
             apinp4 apind4  3.0 * +
             apinp4 apind4  4.0 * +
             apinp4 apind4  5.0 * +
             apinp4 apind4  6.0 * + 
             apinp4 apind4  7.0 * +
             apinp4 apind4  8.0 * +
             apinp4 apind4  9.0 * +
             apinp4 apind4 10.0 * +
             apinp4 apind4 11.0 * +
             apinp4 apind4 12.0 * +
             apinp4 apind4 13.0 * + 
             apinp4 apind4 14.0 * +
             apinp4 apind4 15.0 * +
             apinp4 apind4 16.0 * +
             apinp4 apind4 17.0 * +
             apinp4 apind4 18.0 * +
             apinp4 apind4 19.0 * +
             apinp4 apind4 20.0 * + ;
*----
*  Spatial splitting
*----
INTEGER      CSplitR1 CSplitR2 CSplitR3 CSplitR4 :=
             1        1        1        1        ;
REAL         DeltaRC1 DeltaRC2 DeltaRC3 DeltaRC4 ;
INTEGER      FSplitR1 FSplitR2 FSplitR3 FSplitR4 :=
             1        1        1        1        ;
REAL         DeltaRF1 DeltaRF2 DeltaRF3 DeltaRF4 ;
INTEGER      PTSplitR CTSplitR :=
             1        1        ;
REAL         DeltaPT  DeltaCT  ;
INTEGER      MSplitI  MSplitO :=
             1        1        ;
REAL         DeltaMI  DeltaMO  ;
IF Isplit -1 = THEN
*----
*  Coolant 
*----
  IF CoolS 0 > THEN
    EVALUATE   CSplitR1 CSplitR2 CSplitR3 CSplitR4 :=
               CoolS    CoolS    CoolS    CoolS    ; 
  ELSEIF CoolS 0 < THEN
    EVALUATE   CSplitR1 CSplitR2 CSplitR3 CSplitR4 :=
               CoolS    CoolS    CoolS    CoolS    ; 
  ENDIF ;
*----
*  Fuel 
*----
  IF FuelS 0 > THEN
    EVALUATE   FSplitR1 FSplitR2 FSplitR3 FSplitR4 :=
               FuelS    FuelS    FuelS    FuelS    ;
  ELSEIF FuelS 0 < THEN
    EVALUATE   FSplitR1 FSplitR2 FSplitR3 FSplitR4 :=
               FuelS    FuelS    FuelS    FuelS    ;
  ENDIF ;
*----
*  PT and CT 
*----
  IF PTS 0 > THEN
    EVALUATE   PTSplitR  := PTS  ;
  ELSEIF PTS 0 < THEN
    EVALUATE   PTSplitR  := PTS    ;
  ENDIF ;
  IF CTS 0 > THEN
    EVALUATE   CTSplitR  := CTS   ;
  ELSEIF CTS 0 < THEN
    EVALUATE   CTSplitR  := CTS    ;
  ENDIF ;
*----
*  Moderator
*----
  IF ModeS 0 > THEN
    EVALUATE   MSplitI  MSplitO  := ModeS ModeS ;
  ELSEIF ModeS 0 < THEN
    EVALUATE   MSplitI  MSplitO  := ModeS ModeS ;
  ENDIF ;
ELSEIF Isplit 1 = THEN 
*----
*  Coolant 
*----
  IF CoolDR 0.0 > THEN
    EVALUATE   DeltaRC1 DeltaRC2 DeltaRC3 DeltaRC4 :=
               rcool1 frstann - CoolDR / 
               rcool2 rcool1  - CoolDR /
               rcool3 rcool2  - CoolDR /
               rcool4  rcool3 - CoolDR / ;
    EVALUATE   CSplitR1 CSplitR2 CSplitR3 CSplitR4 :=
               DeltaRC1 R_TO_I  1 + 
               DeltaRC2 R_TO_I  1 + 
               DeltaRC3 R_TO_I  1 + 
               DeltaRC4 R_TO_I  1 + ;
  ELSEIF CoolDR 0.0 < THEN
    EVALUATE   DeltaRC1 DeltaRC2 DeltaRC3 DeltaRC4 :=
               rcool1 frstann - CoolDR / 
               rcool2 rcool1  - CoolDR /
               rcool3 rcool2  - CoolDR /
               rcool4  rcool3 - CoolDR / ;
    EVALUATE   CSplitR1 CSplitR2 CSplitR3 CSplitR4 :=
               DeltaRC1 R_TO_I  1 - 
               DeltaRC2 R_TO_I  1 - 
               DeltaRC3 R_TO_I  1 - 
               DeltaRC4 R_TO_I  1 - ;
  ENDIF ;
*----
*  Fuel 
*----
  IF FuelDR 0.0 > THEN
    EVALUATE   DeltaRF1 DeltaRF2 DeltaRF3 DeltaRF4 :=
               rradf1 FuelDR / 
               rradf2 FuelDR /
               rradf3 FuelDR /
               rradf4 FuelDR / ;  
    EVALUATE   FSplitR1 FSplitR2 FSplitR3 FSplitR4 :=
               DeltaRF1 R_TO_I  1 +
               DeltaRF2 R_TO_I  1 + 
               DeltaRF3 R_TO_I  1 + 
               DeltaRF4 R_TO_I  1 + ;
  ELSEIF FuelDR 0.0 < THEN
    EVALUATE   DeltaRF1 DeltaRF2 DeltaRF3 DeltaRF4 :=
               rradf1 FuelDR / 
               rradf2 FuelDR /
               rradf3 FuelDR /
               rradf4 FuelDR / ;  
  EVALUATE     FSplitR1 FSplitR2 FSplitR3 FSplitR4 :=
               DeltaRF1 R_TO_I  1 -
               DeltaRF2 R_TO_I  1 - 
               DeltaRF3 R_TO_I  1 - 
               DeltaRF4 R_TO_I  1 - ;
  ENDIF ;
*----
*  PT and CT 
*----
  IF PTDR 0.0 > THEN
    EVALUATE   DeltaPT   := rpt rcool4  - PTDR / ;
    EVALUATE   PTSplitR  := DeltaPT  R_TO_I  1 +    ;
  ELSEIF PTDR 0.0 < THEN
    EVALUATE   DeltaPT   := rpt rcool4  - PTDR / ;
    EVALUATE   PTSplitR  := DeltaPT  R_TO_I  1 -    ;
  ENDIF ;
  IF CTDR 0.0 > THEN
    EVALUATE   DeltaCT   := rct rgap    - CTDR / ;
    EVALUATE   CTSplitR  := DeltaCT  R_TO_I  1 +    ;
  ELSEIF CTDR 0.0 < THEN
    EVALUATE   DeltaCT   := rct rgap    - CTDR / ;
    EVALUATE   CTSplitR  := DeltaCT  R_TO_I  1 -    ;
  ENDIF ;
*----
*  Moderator splitting
*----
  IF ModeDR 0.0 > THEN
    EVALUATE   DeltaMI  DeltaMO  := 
               lastann rct       - ModeDR / 
               equivrad lastann  - ModeDR / ;
    EVALUATE   MSplitI  MSplitO  := 
               DeltaMI  R_TO_I  1 +    
               DeltaMO  R_TO_I  1 +            ;
  ELSEIF ModeDR 0.0 < THEN
   EVALUATE   DeltaMI  DeltaMO  := 
               lastann rct       - ModeDR / 
               equivrad lastann  - ModeDR / ;
    EVALUATE   MSplitI  MSplitO  := 
               DeltaMI  R_TO_I  1 -    
               DeltaMO  R_TO_I  1 -            ;
  ENDIF ;
ENDIF ;
*----
*  Select mixture number for cluster cell (C2D1, C2D2)
*----
INTEGER      mixPT  mixGap  mixCT  mixM          :=    2  3  4  5 ;
INTEGER      mixc   mixc1   mixc2  mixc3  mixc4  := 1 14 15 16 17 ;
INTEGER      mixs   mixs1   mixs2  mixs3  mixs4  := 6 18 19 20 21 ;
INTEGER             mixf1   mixf2  mixf3  mixf4  :=    7  8  9 10 ;
IF State "Part-void" = THEN
  EVALUATE   mixc mixc1 mixc2 mixc3 mixc4 := 11 22 23 24 25 ;
ELSEIF State "Absent" = THEN
  EVALUATE   mixc mixc1 mixc2 mixc3 mixc4 :=  0  0  0  0  0 ;
ENDIF ;
*----
*  Select mixture number for homogenized cell (C2D3)
*----
INTEGER      mixhPT mixhGap mixhCT mixhMI mixhMO := 1  2  3  4  5 ;
INTEGER             mixhf1  mixhf2 mixhf3 mixhf4 :=    6  7  8  9 ;
*----
*  Select mixture number for independent pins cluster cell (C2D4)
*----
INTEGER      mixr1a := mixf1 ;
INTEGER      mixr2a mixr2b mixr2c mixr2d mixr2e mixr2f mixr2g := 
             mixf2  26     27     28     29     30     31     ;
INTEGER      mixr3a mixr3b mixr3c mixr3d mixr3e mixr3f mixr3g 
             mixr3h mixr3i mixr3j mixr3k mixr3l mixr3m mixr3n := 
             mixf3  32     33     34     35     36     37
             38     39     40     41     42     43     44     ;
INTEGER      mixr4a mixr4b mixr4c mixr4d mixr4e mixr4f mixr4g 
             mixr4h mixr4i mixr4j mixr4k mixr4l mixr4m mixr4n  
             mixr4o mixr4p mixr4q mixr4r mixr4s mixr4t mixr4u := 
             mixf3  45     46     47     48     49     50
             51     52     53     54     55     56     57
             58     59     60     61     62     64     64     ;
*----
*  Select mixture number for distributed self-shielding / fuel discretization (C2D5)
*----
!INTEGER     mixf1a mixf1b mixf1c mixf1d :=  7 26 30 34 ;
INTEGER     mixf1a mixf1b mixf1c mixf1d mixf1e
            mixf1f mixf1g mixf1h mixf1i mixf1j mixf1k :=
             7 26 30 34 38
            39 40 41 42 43 44 ;
INTEGER     mixf2a mixf2b mixf2c mixf2d :=  8 27 31 35 ;
INTEGER     mixf3a mixf3b mixf3c mixf3d :=  9 28 32 36 ;
INTEGER     mixf4a mixf4b mixf4c mixf4d := 10 29 33 37 ;
REAL        subf1 subf2 subf3 := 0.5 SQRT 0.8 SQRT 0.95 SQRT ;
REAL        subp1 subp2 subp3 subp4 subp5 
            subp6 subp7 subp8 subp9 subp10 :=
            0.1 SQRT 0.2 SQRT 0.3 SQRT 0.4 SQRT 0.5 SQRT
            0.6 SQRT 0.7 SQRT 0.8 SQRT 0.9 SQRT 0.95 SQRT ;
!REAL        rradf1a rradf1b rradf1c := 
!            rradf1 subf1 * rradf1 subf2 * rradf1 subf3 * ;
REAL        rradf2a rradf2b rradf2c := 
            rradf2 subf1 * rradf2 subf2 * rradf2 subf3 * ;
REAL        rradf3a rradf3b rradf3c := 
            rradf3 subf1 * rradf3 subf2 * rradf3 subf3 * ;
REAL        rradf4a rradf4b rradf4c := 
            rradf4 subf1 * rradf4 subf2 * rradf4 subf3 * ;
REAL        rradf1a rradf1b rradf1c rradf1d rradf1e 
            rradf1f rradf1g rradf1h rradf1i rradf1j := 
            rradf1 subp1 * rradf1 subp2 * rradf1 subp3 * 
                           rradf1 subp4 * rradf1 subp5 *
            rradf1 subp6 * rradf1 subp7 * rradf1 subp8 * 
                           rradf1 subp9 * rradf1 subp10 * ;
*----
REAL       hradf2 hradf3 hradf4 := 
           0.5 rradf2 * 0.5 rradf3 * 0.5 rradf4 * ;
*----
*  Select geometry 
*----
IF Model "C2D6" = THEN 
  EVALUATE LocTrk := BCtrk ;
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  CARCEL 6 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>>       
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>  
      MIX     <<mixc>> 
              <<mixc>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>> 
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 13
        MIX  26 26 26 26 27 27 27 27 28 28 28 28 <<mixs>>
        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 0.26847 0.37967 0.46500 0.53694 0.60031
               0.65761 0.71030 0.75934 0.80540 0.84897 0.89041
               <<rradf1>> <<rrads1>> ;
      ::: ROD2 := GEO: TUBE 4 1 2  
        MESHY 0.0 <<hradf2>> <<rradf2>>
        MESHX 0.0 <<rradf2>>
        MIX  30 32 34 <<mixs>>
             29 31 33 <<mixs>>
        NPIN <<npinp2>> RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 0.3050 0.4313 <<rradf2>> <<rrads2>> ;
      ::: ROD3 := GEO: TUBE 4 1 2 
        MESHY 0.0 <<hradf3>> <<rradf3>>
        MESHX 0.0 <<rradf3>> 
        MIX  36 38 40 <<mixs>>
             35 37 39 <<mixs>>
        NPIN <<npinp3>> RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 0.3050 0.4313 <<rradf3>> <<rrads3>> ;
      ::: ROD4 := GEO: TUBE 5 1 2  
        MESHY 0.0 <<hradf4>> <<rradf4>>
        MESHX 0.0 <<rradf4>>
        MIX  42 44 46 48 <<mixs>>
             41 43 45 47 <<mixs>>
        NPIN <<npinp4>> RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 0.2641 0.3735 0.4575 <<rradf4>> <<rrads4>> ;
    ;
  ELSE
    LocalGeo := GEO: ::  CARCEL 9 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>> <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX     <<mixc1>> <<mixc1>> <<mixc2>> <<mixc3>> 
              <<mixc4>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>>
      SPLITR  1 <<CSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>> <<PTSplitR>>  1 <<CTSplitR>> <<MSplitI>>
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 13
        MIX  26 26 26 26 27 27 27 27 28 28 28 28 <<mixs1>>
        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 0.26847 0.37967 0.46500 0.53694 0.60031
               0.65761 0.71030 0.75934 0.80540 0.84897 0.89041
               <<rradf1>> <<rrads1>> ;
      ::: ROD2 := GEO: TUBE 4 1 2
        MESHY 0.0 <<hradf2>> <<rradf2>>
        MESHX 0.0 <<rradf2>>
        MIX  30 32 34 <<mixs2>>
             29 31 33 <<mixs2>>
        NPIN <<npinp2>> RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 0.3050 0.4313 <<rradf2>> <<rrads2>> ;
      ::: ROD3 := GEO: TUBE 4 1 2 
        MESHY 0.0 <<hradf3>> <<rradf3>>
        MESHX 0.0 <<rradf3>> 
        MIX  36 38 40 <<mixs3>>
             35 37 39 <<mixs3>>
        NPIN <<npinp3>> RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 0.3050 0.4313 <<rradf3>> <<rrads3>> ;
      ::: ROD4 := GEO: TUBE 5 1 2  
        MESHY 0.0 <<hradf4>> <<rradf4>>
        MESHX 0.0 <<rradf4>>
        MIX  42 44 46 48 <<mixs4>>
             41 43 45 47 <<mixs4>>
        NPIN <<npinp4>> RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 0.2641 0.3735 0.4575 <<rradf4>> <<rrads4>> ;
    ;
  ENDIF ;
ELSEIF Model "C2D5" = THEN 
  EVALUATE LocTrk := BCtrk ;
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  CARCEL 6 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>>       
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>  
      MIX     <<mixc>> 
              <<mixc>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>> 
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 12
        MIX  <<mixf1a>> <<mixf1b>> <<mixf1c>> <<mixf1d>> <<mixf1e>>
             <<mixf1f>> <<mixf1g>> <<mixf1h>> <<mixf1i>> <<mixf1j>>
             <<mixf1k>> <<mixs>>
        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 <<rradf1a>> <<rradf1b>>
           <<rradf1c>> <<rradf1d>> <<rradf1e>>
           <<rradf1f>> <<rradf1g>> <<rradf1h>>
           <<rradf1i>> <<rradf1j>> <<rradf1>> <<rrads1>> ;
!      ::: ROD1 := GEO: TUBE 5
!        MIX  <<mixf1a>> <<mixf1b>> <<mixf1c>> <<mixf1d>> <<mixs>> 
!        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
!        RADIUS 0.00000 <<rradf1a>> <<rradf1b>>
!           <<rradf1c>> <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 5    
        MIX  <<mixf2a>> <<mixf2b>> <<mixf2c>> <<mixf2d>> <<mixs>>
        NPIN <<npinp2>> RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 <<rradf2a>> <<rradf2b>>
           <<rradf2c>> <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 5   
        MIX  <<mixf3a>> <<mixf3b>> <<mixf3c>> <<mixf3d>> <<mixs>>
        NPIN <<npinp3>> RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 <<rradf3a>> <<rradf3b>>
           <<rradf3c>> <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 5   
        MIX  <<mixf4a>> <<mixf4b>> <<mixf4c>> <<mixf4d>> <<mixs>>
        NPIN <<npinp4>> RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 <<rradf4a>> <<rradf4b>>
           <<rradf4c>> <<rradf4>> <<rrads4>>      ;
    ;
  ELSE
    LocalGeo := GEO: ::  CARCEL 9 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>> <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX     <<mixc1>> <<mixc1>> <<mixc2>> <<mixc3>> 
              <<mixc4>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>>
      SPLITR  1 <<CSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>> <<PTSplitR>>  1 <<CTSplitR>> <<MSplitI>>
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 12
        MIX  <<mixf1a>> <<mixf1b>> <<mixf1c>> <<mixf1d>> <<mixf1e>>
             <<mixf1f>> <<mixf1g>> <<mixf1h>> <<mixf1i>> <<mixf1j>>
             <<mixf1k>> <<mixs1>>
        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 <<rradf1a>> <<rradf1b>>
           <<rradf1c>> <<rradf1d>> <<rradf1e>>
           <<rradf1f>> <<rradf1g>> <<rradf1h>>
           <<rradf1i>> <<rradf1j>> <<rradf1>> <<rrads1>> ;      
!      ::: ROD1 := GEO: TUBE 5
!        MIX  <<mixf1a>> <<mixf1b>> <<mixf1c>> <<mixf1d>> <<mixs1>> 
!        NPIN <<npinp1>> RPIN <<rpinp1>> APIN <<apinp1>>
!        RADIUS 0.00000 <<rradf1a>> <<rradf1b>>
!           <<rradf1c>> <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 5    
        MIX  <<mixf2a>> <<mixf2b>> <<mixf2c>> <<mixf2d>> <<mixs2>>
        NPIN <<npinp2>> RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 <<rradf2a>> <<rradf2b>>
           <<rradf2c>> <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 5   
        MIX  <<mixf3a>> <<mixf3b>> <<mixf3c>> <<mixf3d>> <<mixs3>>
        NPIN <<npinp3>> RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 <<rradf3a>> <<rradf3b>>
           <<rradf3c>> <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 5   
        MIX  <<mixf4a>> <<mixf4b>> <<mixf4c>> <<mixf4d>> <<mixs4>>
        NPIN <<npinp4>> RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 <<rradf4a>> <<rradf4b>>
           <<rradf4c>> <<rradf4>> <<rrads4>>      ;
    ;
  ENDIF ;
ELSEIF Model "C2D1" = THEN 
  EVALUATE LocTrk := BCtrk ;
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  CARCEL 6 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>>       
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>  
      MIX     <<mixc>> 
              <<mixc>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>> 
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 2 
        MIX  <<mixf1>> <<mixs>>  NPIN <<npinp1>> 
        RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 2    
        MIX  <<mixf2>> <<mixs>>  NPIN <<npinp2>> 
        RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 2   
        MIX  <<mixf3>> <<mixs>>  NPIN <<npinp3>> 
        RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 2   
        MIX  <<mixf4>> <<mixs>>  NPIN <<npinp4>> 
        RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ELSE
    LocalGeo := GEO: ::  CARCEL 9 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>> <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX     <<mixc1>> <<mixc1>> <<mixc2>> <<mixc3>> 
              <<mixc4>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>>
      SPLITR  1 <<CSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>> <<PTSplitR>>  1 <<CTSplitR>> <<MSplitI>>
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 2 
        MIX  <<mixf1>> <<mixs1>> NPIN <<npinp1>> 
        RPIN <<rpinp1>> APIN <<apinp1>>
        SPLITR <<FSplitR1>> 1 
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 2    
        MIX  <<mixf2>> <<mixs2>> NPIN <<npinp2>> 
        RPIN <<rpinp2>> APIN <<apinp2>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 2   
        MIX  <<mixf3>> <<mixs3>> NPIN <<npinp3>> 
        RPIN <<rpinp3>> APIN <<apinp3>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 2   
        MIX  <<mixf4>> <<mixs4>> NPIN <<npinp4>> 
        RPIN <<rpinp4>> APIN <<apinp4>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ENDIF ;
ELSEIF Model "C2D2" = THEN 
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  TUBE 7
      EDIT 0
      R+ REFL
      RADIUS  0.  <<frstann>>       
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
              <<equivrad>>  
      MIX     <<mixc>> 
              <<mixc>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>> 
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 2 
        MIX  <<mixf1>> <<mixs>> NPIN <<npinp1>> 
        RPIN <<rpinp1>> APIN <<apinp1>>
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 2    
        MIX  <<mixf2>> <<mixs>> NPIN <<npinp2>> 
        RPIN <<rpinp2>> APIN <<apinp2>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 2   
        MIX  <<mixf3>> <<mixs>> NPIN <<npinp3>> 
        RPIN <<rpinp3>> APIN <<apinp3>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 2   
        MIX  <<mixf4>> <<mixs>> NPIN <<npinp4>> 
        RPIN <<rpinp4>> APIN <<apinp4>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ELSE
    LocalGeo := GEO: ::  TUBE 10
      EDIT 0
      R+ REFL
      RADIUS  0.  <<frstann>> <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
              <<equivrad>>  
      MIX     <<mixc1>> <<mixc1>> <<mixc2>> <<mixc3>> 
              <<mixc4>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>>
      SPLITR  1     <<CSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>> <<PTSplitR>>  1 <<CTSplitR>> <<MSplitI>>
              <<MSplitO>>
      CLUSTER ROD1 ROD2 ROD3 ROD4
      ::: ROD1 := GEO: TUBE 2 
        MIX  <<mixf1>> <<mixs1>> NPIN <<npinp1>> 
        RPIN <<rpinp1>> APIN <<apinp1>>
        SPLITR <<FSplitR1>> 1 
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2 := GEO: TUBE 2    
        MIX  <<mixf2>> <<mixs2>> NPIN <<npinp2>> 
        RPIN <<rpinp2>> APIN <<apinp2>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD3 := GEO: TUBE 2   
        MIX  <<mixf3>> <<mixs3>> NPIN <<npinp3>> 
        RPIN <<rpinp3>> APIN <<apinp3>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4 := GEO: TUBE 2   
        MIX  <<mixf4>> <<mixs4>> NPIN <<npinp4>> 
        RPIN <<rpinp4>> APIN <<apinp4>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ENDIF ;
ELSEIF Model "C2D3" = THEN 
  EVALUATE LocTrk := BCtrk ;
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  CARCEL 8 3 3
      EDIT 0
      X- REFL MESHX <<xymin>> <<xyimin>> <<xyimax>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xyimin>> <<xyimax>> <<xymax>> Y+ REFL
      RADIUS  0.  <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX   <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
    ;
  ELSE
    LocalGeo := GEO: ::  CARCEL 8 3 3
      EDIT 0
      X- REFL MESHX <<xymin>> <<xyimin>> <<xyimax>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xyimin>> <<xyimax>> <<xymax>> Y+ REFL
      RADIUS  0.  <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX   <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
            <<mixhf1>> <<mixhf2>> <<mixhf3>> <<mixhf4>> 
            <<mixhPT>> <<mixhGap>> <<mixhCT>> <<mixhMI>> <<mixhMO>>
      SPLITR  <<FSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>>  <<PTSplitR>>  1 <<CTSplitR>>   <<MSplitI>>
      SPLITX  <<MSplitO>> 1 <<MSplitO>>  
      SPLITY  <<MSplitO>> 1 <<MSplitO>>  
    ;
  ENDIF ;
ELSEIF Model "C2D4" = THEN 
  EVALUATE LocTrk := BCtrk ;
  IF Option "Shield" = THEN
    LocalGeo := GEO: ::  CARCEL 6 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>>       
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>  
      MIX     <<mixc>> 
              <<mixc>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>> 
      CLUSTER ROD1a 
              ROD2a ROD2b ROD2c ROD2d ROD2e ROD2f ROD2g
              ROD3a ROD3b ROD3c ROD3d ROD3e ROD3f ROD3g 
              ROD3h ROD3i ROD3j ROD3k ROD3l ROD3m ROD3n
              ROD4a ROD4b ROD4c ROD4d ROD4e ROD4f ROD4g 
              ROD4h ROD4i ROD4j ROD4k ROD4l ROD4m ROD4n 
              ROD4o ROD4p ROD4q ROD4r ROD4s ROD4t ROD4u 
      ::: ROD1a := GEO: TUBE 2 
        MIX  <<mixr1a>> <<mixs>>   NPIN  1 
        RPIN <<rpinp1>> APIN <<apin1a>>
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2a := GEO: TUBE 2    
        MIX  <<mixr2a>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2a>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2b := GEO: TUBE 2    
        MIX  <<mixr2b>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2b>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2c := GEO: TUBE 2    
        MIX  <<mixr2c>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2c>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2d := GEO: TUBE 2    
        MIX  <<mixr2d>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2d>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2e := GEO: TUBE 2    
        MIX  <<mixr2e>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2e>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2f := GEO: TUBE 2    
        MIX  <<mixr2f>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2f>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2g := GEO: TUBE 2    
        MIX  <<mixr2g>> <<mixs>>   NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2g>>
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;        
      ::: ROD3a := GEO: TUBE 2   
        MIX  <<mixr3a>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3a>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3b := GEO: TUBE 2   
        MIX  <<mixr3b>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3b>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3c := GEO: TUBE 2   
        MIX  <<mixr3c>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3c>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3d := GEO: TUBE 2   
        MIX  <<mixr3d>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3d>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3e := GEO: TUBE 2   
        MIX  <<mixr3e>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3e>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3f := GEO: TUBE 2   
        MIX  <<mixr3f>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3f>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3g := GEO: TUBE 2   
        MIX  <<mixr3g>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3g>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3h := GEO: TUBE 2   
        MIX  <<mixr3h>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3h>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3i := GEO: TUBE 2   
        MIX  <<mixr3i>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3i>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3j := GEO: TUBE 2   
        MIX  <<mixr3j>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3j>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3k := GEO: TUBE 2   
        MIX  <<mixr3k>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3k>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3l := GEO: TUBE 2   
        MIX  <<mixr3l>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3l>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3m := GEO: TUBE 2   
        MIX  <<mixr3m>> <<mixs>>    NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3m>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3n := GEO: TUBE 2   
        MIX  <<mixr3n>> <<mixs>>   NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3n>>
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4a := GEO: TUBE 2   
        MIX  <<mixr4a>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4a>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4b := GEO: TUBE 2   
        MIX  <<mixr4b>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4b>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4c := GEO: TUBE 2   
        MIX  <<mixr4c>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4c>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4d := GEO: TUBE 2   
        MIX  <<mixr4d>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4d>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4e := GEO: TUBE 2   
        MIX  <<mixr4e>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4e>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4f := GEO: TUBE 2   
        MIX  <<mixr4f>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4f>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4g := GEO: TUBE 2   
        MIX  <<mixr4g>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4g>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4h := GEO: TUBE 2   
        MIX  <<mixr4h>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4h>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4i := GEO: TUBE 2   
        MIX  <<mixr4i>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4i>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4j := GEO: TUBE 2   
        MIX  <<mixr4j>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4j>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4k := GEO: TUBE 2   
        MIX  <<mixr4k>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4k>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4l := GEO: TUBE 2   
        MIX  <<mixr4l>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4l>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4m := GEO: TUBE 2   
        MIX  <<mixr4m>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4m>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4n := GEO: TUBE 2   
        MIX  <<mixr4n>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4n>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4o := GEO: TUBE 2   
        MIX  <<mixr4o>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4o>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4p := GEO: TUBE 2   
        MIX  <<mixr4p>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4p>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4q := GEO: TUBE 2   
        MIX  <<mixr4q>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4q>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4r := GEO: TUBE 2   
        MIX  <<mixr4r>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4r>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4s := GEO: TUBE 2   
        MIX  <<mixr4s>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4s>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4t := GEO: TUBE 2   
        MIX  <<mixr4t>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4t>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4u := GEO: TUBE 2   
        MIX  <<mixr4u>> <<mixs>>   NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4u>>
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ELSE
    LocalGeo := GEO: ::  CARCEL 9 1 1
      EDIT 0
      X- REFL MESHX <<xymin>> <<xymax>> X+ REFL
      Y- REFL MESHY <<xymin>> <<xymax>> Y+ REFL
      RADIUS  0.  <<frstann>> <<rcool1>> <<rcool2>> <<rcool3>>
              <<rcool4>> <<rpt>> <<rgap>> <<rct>>  <<lastann>>
      MIX     <<mixc1>> <<mixc1>> <<mixc2>> <<mixc3>> 
              <<mixc4>> <<mixPT>> <<mixGap>> <<mixCT>> <<mixM>> <<mixM>>
      SPLITR  1     <<CSplitR1>>  <<CSplitR2>> <<CSplitR3>> 
              <<CSplitR4>> <<PTSplitR>>  1 <<CTSplitR>> <<MSplitI>>
      CLUSTER ROD1a 
              ROD2a ROD2b ROD2c ROD2d ROD2e ROD2f ROD2g
              ROD3a ROD3b ROD3c ROD3d ROD3e ROD3f ROD3g 
              ROD3h ROD3i ROD3j ROD3k ROD3l ROD3m ROD3n
              ROD4a ROD4b ROD4c ROD4d ROD4e ROD4f ROD4g 
              ROD4h ROD4i ROD4j ROD4k ROD4l ROD4m ROD4n 
              ROD4o ROD4p ROD4q ROD4r ROD4s ROD4t ROD4u 
      ::: ROD1a := GEO: TUBE 2 
        MIX  <<mixr1a>> <<mixs1>>  NPIN  1 
        RPIN <<rpinp1>> APIN <<apin1a>>
        SPLITR <<FSplitR1>> 1 
        RADIUS 0.00000 <<rradf1>> <<rrads1>>      ;
      ::: ROD2a := GEO: TUBE 2    
        MIX  <<mixr2a>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2a>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2b := GEO: TUBE 2    
        MIX  <<mixr2b>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2b>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2c := GEO: TUBE 2    
        MIX  <<mixr2c>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2c>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2d := GEO: TUBE 2    
        MIX  <<mixr2d>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2d>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2e := GEO: TUBE 2    
        MIX  <<mixr2e>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2e>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2f := GEO: TUBE 2    
        MIX  <<mixr2f>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2f>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;
      ::: ROD2g := GEO: TUBE 2    
        MIX  <<mixr2g>> <<mixs2>>  NPIN  1 
        RPIN <<rpinp2>> APIN <<apin2g>>
        SPLITR <<FSplitR2>> 1 
        RADIUS 0.00000 <<rradf2>> <<rrads2>>      ;        
      ::: ROD3a := GEO: TUBE 2   
        MIX  <<mixr3a>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3a>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3b := GEO: TUBE 2   
        MIX  <<mixr3b>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3b>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3c := GEO: TUBE 2   
        MIX  <<mixr3c>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3c>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3d := GEO: TUBE 2   
        MIX  <<mixr3d>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3d>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3e := GEO: TUBE 2   
        MIX  <<mixr3e>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3e>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3f := GEO: TUBE 2   
        MIX  <<mixr3f>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3f>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3g := GEO: TUBE 2   
        MIX  <<mixr3g>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3g>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3h := GEO: TUBE 2   
        MIX  <<mixr3h>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3h>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3i := GEO: TUBE 2   
        MIX  <<mixr3i>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3i>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3j := GEO: TUBE 2   
        MIX  <<mixr3j>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3j>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3k := GEO: TUBE 2   
        MIX  <<mixr3k>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3k>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3l := GEO: TUBE 2   
        MIX  <<mixr3l>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3l>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3m := GEO: TUBE 2   
        MIX  <<mixr3m>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3m>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD3n := GEO: TUBE 2   
        MIX  <<mixr3n>> <<mixs3>>  NPIN  1 
        RPIN <<rpinp3>> APIN <<apin3n>>
        SPLITR <<FSplitR3>> 1 
        RADIUS 0.00000 <<rradf3>> <<rrads3>>      ;
      ::: ROD4a := GEO: TUBE 2   
        MIX  <<mixr4a>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4a>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4b := GEO: TUBE 2   
        MIX  <<mixr4b>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4b>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4c := GEO: TUBE 2   
        MIX  <<mixr4c>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4c>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4d := GEO: TUBE 2   
        MIX  <<mixr4d>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4d>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4e := GEO: TUBE 2   
        MIX  <<mixr4e>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4e>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4f := GEO: TUBE 2   
        MIX  <<mixr4f>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4f>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4g := GEO: TUBE 2   
        MIX  <<mixr4g>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4g>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4h := GEO: TUBE 2   
        MIX  <<mixr4h>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4h>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4i := GEO: TUBE 2   
        MIX  <<mixr4i>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4i>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4j := GEO: TUBE 2   
        MIX  <<mixr4j>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4j>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4k := GEO: TUBE 2   
        MIX  <<mixr4k>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4k>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4l := GEO: TUBE 2   
        MIX  <<mixr4l>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4l>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4m := GEO: TUBE 2   
        MIX  <<mixr4m>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4m>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4n := GEO: TUBE 2   
        MIX  <<mixr4n>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4n>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4o := GEO: TUBE 2   
        MIX  <<mixr4o>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4o>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4p := GEO: TUBE 2   
        MIX  <<mixr4p>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4p>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4q := GEO: TUBE 2   
        MIX  <<mixr4q>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4q>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4r := GEO: TUBE 2   
        MIX  <<mixr4r>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4r>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4s := GEO: TUBE 2   
        MIX  <<mixr4s>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4s>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4t := GEO: TUBE 2   
        MIX  <<mixr4t>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4t>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
      ::: ROD4u := GEO: TUBE 2   
        MIX  <<mixr4u>> <<mixs4>>  NPIN  1 
        RPIN <<rpinp4>> APIN <<apin4u>>
        SPLITR <<FSplitR4>> 1 
        RADIUS 0.00000 <<rradf4>> <<rrads4>>      ;
    ;
  ENDIF ;
ENDIF ;
*----
*  Process the geometry
*----
EVALUATE Title := Model Option State LocTrk + + + ;
Tracking Intline := NXT: LocalGeo ::
 EDIT 1 TITLE <<Title>> ANIS 2
 <<LocTrk>> <<NbAngles>> <<TrkDens>> ;
 
*----
*  Clean up
*----
LocalGeo := DELETE:  LocalGeo                               ; 
QUIT "LIST" .
*QUIT .
