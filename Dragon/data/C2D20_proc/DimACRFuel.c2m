*DECK DimACRFuel.c2m
*----
*  Name          : DimACRFuel.c2m
*  Type          : DRAGON procedure
*  Use           : Dimensions for ACR-1000 fuel
*  Author        : G. Marleau
*  Revisions     : 2006/05/16 -> Replace ACR-700 by ACR-1000
*  Reference     : fuel18n.pin and fuel20n.pin
*  
*  Description of the procedure: 
*    DimACRFuel ::  
*      <<Ring>> 
*      >>npinp<< >>rpinp<< >>apinp<< >>rradf<< >>rrads<< ;
*  Input data:
*    Ring          : Ring number
*  Output data: 
*    npinp         : number of pins in this ring
*    rpinp         : ring radius (cm) 
*    apinp         : first pin angle (radians)
*    rradf         : outer fuel radius (cm)
*    rrads         : outer sheat radius (cm)
*----
* Definition of the input and output data structures and 
* of the input and output parameters for this procedure
*
MODULE    END:   ;
INTEGER   Ring   ;
  :: >>Ring<<  ;
*----
*  Pin diameters are given in mm. Transform them
*  to radius in cm.
*----
REAL         thikI    thikA     :=
             0.064    0.044       ;
*----
*  Number of pins in each ring
*----
INTEGER npinp1 npinp2 npinp3 npinp4 :=
        1      7      14     21     ;
*----
*  Radius of pins in each ring
*  Diameter is given in mm. Transform to radius in cm.
*----
REAL    rradf1   rradf2   rradf3   rradf4 := 
        0.93025  0.53025  0.53025  0.53025  ;
*----
*  Outer sheath radius in each ring
*----
REAL    rrads1   rrads2    rrads3    rrads4         := 
        1.003383 0.573787  0.573787  0.573787  ;
*----
*  Pins ring center location.
*  Diameter is given in mm. Transform to radius in cm.
*----
REAL    rpinp1   rpinp2   rpinp3   rpinp4 :=
        0.0      1.725    2.953    4.384 ;
*----
*  Pins angular location.
*----
REAL         apinp1 apinp2 apinp3 apinp4 := 
             0.0    0.0    $Pi_R  npinp3 I_TO_R / 0.0  ;    
IF Ring 4 = THEN
  :: <<npinp4>> <<rpinp4>> <<apinp4>> <<rradf4>> <<rrads4>>  ;
ELSEIF Ring 3 = THEN
  :: <<npinp3>> <<rpinp3>> <<apinp3>> <<rradf3>> <<rrads3>>  ;
ELSEIF Ring 2 = THEN
  :: <<npinp2>> <<rpinp2>> <<apinp2>> <<rradf2>> <<rrads2>>  ;
ELSEIF Ring 1 = THEN
  :: <<npinp1>> <<rpinp1>> <<apinp1>> <<rradf1>> <<rrads1>>  ;
ELSE
  ECHO "WARNING: Invalid Ring number in DimACRFuel : " Ring ;
ENDIF ;
QUIT .
