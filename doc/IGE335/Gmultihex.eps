%!PS-Adobe-2.0 EPSF-1.2
%%Title: Fig14.eps
%%Creator: CLARIS EPSF Export Filter V1.0
%%CreationDate:12/3/91  3:36:00 p.m.
%%BoundingBox: 82.000 509.000 470.000 675.000                                                          
%%QDBoundingBox: 82.000 117.000 470.000 283.000                                                          
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ObjectsIncluded: tText=F tLine=F tRect=F tRRect=F tOval=F tArc=F tFree=F tPoly=F tBMap=T tNote=F tBez=F tPMap=F 
%%AttributesIncluded: kBaWPattType=T kPixPattType=F kGradientType=F 
%%EndComments
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
%%BeginProcSet : rect 
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
%%EndProcSet 
%%BeginProcSet : R 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
%%EndProcSet
%%BeginProcSet : SaveScreenBW
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
  } bind def
%%EndProcSet
%%BeginProcSet : RestoreScreenBW
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleBW
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SaveScreenColor 
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
  } bind def
%%EndProcSet
%%BeginProcSet : RestoreColorScreen
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleColor
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
%%EndProcSet 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
%%BeginProcSet : BitMap
/BitMap {
 /buffer ^1 string def
 ^2 ^5 2 div add 792 ^3 sub ^6 2 div add translate
 ^4 57.3 mul rotate
  0 ^5 2 div sub 0 ^6 2 div sub translate
 ^5 ^6 scale
 ^5 ^6 ^7 [^5 0 0 -^6 0 ^6] {currentfile buffer readhexstring pop} image
}bind def 
%%EndProcSet 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def

%%EndProlog
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tLayer
%
%@BeginImage
gsave
/buffer 50 string def
276.000 592.000 translate
0.000 rotate
-197.000 -83.000 translate
400.000 166.000 scale
0 0 moveto
0 0 moveto
0 166 lineto
388 166 lineto
388 0 lineto closepath clip
400 166 1 [400 0 0 -166 0 166] {currentfile buffer readhexstring pop} image
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7FFFFFFFFFFF
FFFFFFFFE03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBFFFFFFFFFFF
FFFFFFFFFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFE00FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBFFFFFFFFFFF
FFFFFFFFEF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7FFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFFFFFFFFFFF
FFFFFFFFFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFFFFFFFFFFFFF
FFFFFFFFE00FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFFFFFFFFFFFFF
FFFFFFFFFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFFFFFFFFFFFFF
FFFFFFFFFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFFFFFFFFFFF
FFFFFFFFF9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7FFFFFFFFFFF
FFFFFFFFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFFFFFFFFFFFFF
FFFFFFFFE00FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFFFFFFFFFFFFF
FFFFFFFFFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFFFFFFFFFFFFF
FFFFFFFFF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBFFFFFFFFFFF
FFFFFFFFEF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7FFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFFFFFFFFFFF
FFFFFFFFFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7FFFFFFFFFFF
FFFFFFFFE03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBFFFFFFFFFFF
FFFFFFFFFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFE00FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBFFFFFFFFFFF
FFFFFFFFEF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7FFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFFFFFFFFFFF
FFFFFFFFFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFFFFFFFFFFFFF
FFFFFFFFE00FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFE000FFFBFF000FFFBFFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFFFFFFFFFFFFF
FFFFFFFFFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFFFFFFFFFFFFF
FFFFFFFFFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFFFFFFFFFFF
FFFFFFFFF9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7FFFFFFFFFFF
FFFFFFFFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFFFFFFFFFFFFF
FFFFFFFFE00FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFE000FFFBFF000FFFBFFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFFFFFFFFFFFFF
FFFFFFFFFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFFFFFFFFFFFFF
FFFFFFFFF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBF0FDFBEFBFFFFFFFFFFF
FFFFFFFFEF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7EF7EF00F7FFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFFFFFFFFFFF
FFFFFFFFFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7EFBEFF7F7FFFFFFFFFFF
FFFFFFFFE03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBC03DFE7FBFFFFFFFFFFF
FFFFFFFFFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FDFFFBFD7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFE00FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FF000FFF7FFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FDFFFBFF7FFFFFFFFFFFFF
FFFFFFFFF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBF0FDFF7FBFFFFFFFFFFF
FFFFFFFFEF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7EF7EF80F7FFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFDFBF7FFEFFFFFFFFFFFF
FFFFFFFFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFF7FBFFDFFFFFFFFFFFF
FFFFFFFFFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFEFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFBFF7FFEFFFFFFFFFFFF
FFFFFFFFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFF7FF7FFEFFFFFFFFFFFF
FFFFFFFFEFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7EFBEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBC03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFEFFF7FFDFFFFFFFFFFFFF
FFFFFFFFE00FFFBFF000FFFBFE000FFFBFF000FFFBFF000FFFBFF000FFFBFF000FFFBFE000FFFBFF000FFFBFFFFFFFFFFFFF
FFFFFFFFFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FEFFF7FF7FFFFFFFFFFFFF
FFFFFFFFFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFDFFFBFEFFFFFFFFFFFFFF
FFFFFFFFFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFDFFFBFDFFFFFFFFFFFFFF
FFFFFFFFFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFDFDFBEFBFFFFFFFFFFF
FFFFFFFFF9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7F9FEF00F7FFFFFFFFFFF
FFFFFFFFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFF5FF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFDFFC003FFFFFFFFFFFF
FFFFFFFFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFDFFBFFDFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFDFF7FFEFFFFFFFFFFFF
FFFFFFFFFDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FDFEFC3F7FFFFFFFFFFF
FFFFFFFFE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBE03DFBDFBFFFFFFFFFFF
FFFFFFFFFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFDFFFBF7EFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
grestore
%@EndImage
%%Trailer
end
